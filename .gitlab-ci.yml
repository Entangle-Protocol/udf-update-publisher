stages:
  - versioning
  - sonarqube
  - container_build
  - build
  - push
  - clean_up
  - deploy_testnet
  - deploy_mainnet
  - security-scans

versioning and prepare:
  stage: versioning
  script:
    - echo "Version is $CI_COMMIT_BRANCH.$CI_PIPELINE_ID"
  tags:
    - linux

# Run tests
dev_test:
  stage: build
  image: golang:1.22.3-bookworm
  script:
    - LD_LIBRARY_PATH=$(pwd) go test -v ./...
  tags:
    - docker

dev_build:
  stage: container_build
  script:
    - docker build -f ./docker/Dockerfile.publisher -t 899260217834.dkr.ecr.us-east-1.amazonaws.com/pull-update-publisher:$CI_COMMIT_BRANCH.$CI_PIPELINE_ID .
    # - docker create --name ctr-$CI_COMMIT_BRANCH.$CI_PIPELINE_ID 899260217834.dkr.ecr.us-east-1.amazonaws.com/pull-update-publisher:$CI_COMMIT_BRANCH.$CI_PIPELINE_ID
    # - docker cp ctr-$CI_COMMIT_BRANCH.$CI_PIPELINE_ID:/lib/libprice_publisher.so ./libprice_publisher.so
    # - docker rm ctr-$CI_COMMIT_BRANCH.$CI_PIPELINE_ID
  tags:
    - linux
  # artifacts:
  #   paths:
  #     - ./libprice_publisher.so

push_to_aws:
  stage: push
  script:
    - docker push 899260217834.dkr.ecr.us-east-1.amazonaws.com/pull-update-publisher:$CI_COMMIT_BRANCH.$CI_PIPELINE_ID 
  only:
    - main
    - dev
  tags:
    - linux

clean_up_image:
  stage: clean_up
  script:
    - docker rmi 899260217834.dkr.ecr.us-east-1.amazonaws.com/pull-update-publisher:$CI_COMMIT_BRANCH.$CI_PIPELINE_ID -f
  tags:
    - linux

deploy_pull-update-publisher_testnet:
  stage: deploy_testnet
  script:
    - git clone https://oauth2:$OAUTH_KEY@gitlab.ent-dx.com/devops/ci-scripts.git
    - python3 ci-scripts/awx_call.py https://awx.ent-dx.com/api/v2/job_templates/112/launch/ $AWX_TOKEN script_target:$CI_COMMIT_BRANCH.$CI_PIPELINE_ID
  tags:
    - linux
  only:
    - main
    - dev
  when: manual

deploy_pull-update-publisher_mainnet:
  stage: deploy_mainnet
  script:
    - git clone https://oauth2:$OAUTH_KEY@gitlab.ent-dx.com/devops/ci-scripts.git
    - python3 ci-scripts/awx_call.py https://awx.ent-dx.com/api/v2/job_templates/165/launch/ $AWX_TOKEN script_target:$CI_COMMIT_BRANCH.$CI_PIPELINE_ID
  tags:
    - linux
  only:
    - main
    - dev
  when: manual

security-scans:
  stage: security-scans
  trigger:
    include:
      - project: 'entangle/security'
        ref: 'main'
        file: '.gitlab-ci.yml'
  needs: []
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never    
variables:
  DEFECTDOJO_PRODUCTID: 12
